apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${IMAGE}-${VERSION}-${WORLD_NAME}
spec:
  selector:
    matchLabels:
      app: ${IMAGE}-${VERSION}-${WORLD_NAME}
  replicas: 1
  template:
    metadata:
      labels:
        app: ${IMAGE}-${VERSION}-${WORLD_NAME}
    spec:
      volumes:
      - name: log
        persistentVolumeClaim:
          claimName: minecraft-${TYPE}-log-${VERSION}-${WORLD_NAME}
      - name: backups 
        persistentVolumeClaim:
          claimName: minecraft-${TYPE}-backups-${VERSION}-${WORLD_NAME}
      - name: world 
        persistentVolumeClaim:
          claimName: minecraft-${TYPE}-world-${VERSION}-${WORLD_NAME}
      containers:
      - name: ${IMAGE}
        image: ${IMAGE}:${VERSION}
        imagePullPolicy: Never        
        envFrom:
        - configMapRef:
            name: ${IMAGE}-${VERSION}-${WORLD_NAME}
        volumeMounts:
        - mountPath: /opt/minecraft/log
          name: log
        - mountPath: /opt/minecraft/backups
          name: backups 
        - mountPath: "${WORLD_BASE}/${WORLD_NAME}"
          name: world           
        ports:
        - containerPort: 25565
          name: default 
        - containerPort: 25575
          name: mcrcon
---
apiVersion: v1
kind: Service
metadata:
  name: ${IMAGE}-service-${VERSION_HYPHEN}-${WORLD_NAME}
  # labels:
  #   kubernetes.io/minikube-addons-endpoint: ingress
spec:
  type: NodePort
  ports:
    - name: default
      port: 25565
      targetPort: default
    - name: mcrcon
      port: 25575
      targetPort: mcrcon
  selector:
    app: ${IMAGE}-${VERSION}-${WORLD_NAME}
